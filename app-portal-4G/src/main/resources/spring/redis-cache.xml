<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd" default-lazy-init="true">
     
    <!-- redis客户端，直接连接 -->
	<bean id="cacheClient" class="com.al.crm.nosql.cache.impl.RedisCache" destroy-method="destroy" lazy-init="true">
		<constructor-arg>
			<props>
				<prop key="redis.url">${redis.url}</prop>
				<prop key="redis.maxActive">${redis.maxActive}</prop>
				<prop key="redis.maxIdle">${redis.maxIdle}</prop>
				<prop key="redis.minIdle">${redis.minIdle}</prop>
			</props>
		</constructor-arg>
	</bean>
	
	<!-- redis客户端，代理连接 -->
	<!--
	<bean id="cacheClient" class="com.al.crm.nosql.cache.impl.CacheProxy">
		<constructor-arg>
			<props>
				<prop key="cacheProxy.serviceUrl">${dataCacheProxy.http.url}</prop>
				<prop key="cacheProxy.http.maxConnections">${dataCacheProxy.http.maxConnections}</prop>
				<prop key="cacheProxy.http.timeout">${dataCacheProxy.http.timeout}</prop>
			</props>
		</constructor-arg>
	</bean>
	-->
</beans>
