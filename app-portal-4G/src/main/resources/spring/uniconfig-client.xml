<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">	
	
	<!-- 属性文件位置，统一定义，共用 -->
	<bean id="uniCfgPropFile" class="java.lang.String">
	 	<constructor-arg>	
	 		<value>classpath:/portal/portal.properties</value>
	 	</constructor-arg>
	 </bean>
		
	<!-- 写常量类的观察者：用于感知属性变化并写到常量类中 -->
	<bean id="writeConstantObserver" class="com.al.uniconfig.util.WriteConstantObserver"/>
	
	<bean id="uniConfigPropertyLoader" class="com.al.uniconfig.spring.UniConfigPropertyLoader" destroy-method="stop">
		<!-- 应用程序包括的模块，多个模块以,隔开。此处列出的模块属于同一个domain（或应用系统）的	
		             注意：如果要列模块名，则需要列全了，未列的模块将不会同步配置信息。	  
		<property name="modules" value="DEMO,TestMod" />
		--> 
				
		<!-- 应用程序中包含的其他domain的模块，带有domain前缀，多个以,隔开。
		<property name="modulesWithDomainPrefix" value="TestSys.DEMO" />
		-->
		
		<!--  -->
		<property name="notifierClient">
			<ref bean="notifierClient"/>
		</property>
		
	</bean>
	<bean id="uniConfigMDALoader" class="com.al.uniconfig.spring.UniConfigMDALoader" destroy-method="destroy">
		<property name="locations">
			<array>
				<value>classpath:/portal/MDA_APP.xml</value>
			</array>
		</property> 
	</bean>
	
	
	<bean id="uniConfig" class="com.al.uniconfig.spring.UniConfigPropertyPlaceholderConfigurer">
		<!-- 		 
		<property name="locations" value="classpath:uniConfig.properties"/>	
		 -->
		<property name="locations" ref="uniCfgPropFile"/>	
		<property name="order" value="99" /> 
		
		<!-- 自动扫描属性Loader -->
		<property name="autoScan" value="true" />		
		<!-- 自动扫描属性Observer -->
		<property name="autoScanPropObserver" value="true" />						
	</bean>

	<!-- writeModuleConstant是提供给外部框架调用，从而能够在系统启动时将属性数据写入模块常量类中-->
	<bean id="writeModuleConstant" class="com.al.uniconfig.writeconstant.WriteConstantListener"/>
	
	<!-- 事件通知客户端，显式定义出来，可供共用  ，注意 clientSysCode这个属性无法通过占位符注入。
		在start方法需使用时无法取到，所以通过configLocation从属性文件直接获取 -->
	<bean id="notifierClient" class="com.linkage.crm.csb.notifiy.EventNotifyClient" init-method="start" destroy-method="stop">
		<!-- 
		<property name="configLocation" value="uniConfig.properties"/>	
		 -->
		<property name="configLocation" ref="uniCfgPropFile"/>	
		<property name="propKeyPrefix" value="uniconfig"/>	
	</bean>
	 
</beans>